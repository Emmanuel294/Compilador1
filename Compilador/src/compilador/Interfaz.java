/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package compilador;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Emmanuel CObian Zamora y Diego Zaizatr Gutierrez.
 * @version 2.0.1
 */
public class Interfaz extends javax.swing.JFrame {
    boolean declarar = false, reservada = false;
    String tipo = "";
    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        TaEditor = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        TaVariables = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        TaConsola = new javax.swing.JTextArea();
        MBR = new javax.swing.JMenuBar();
        Mngc = new javax.swing.JMenu();
        MnCargar = new javax.swing.JMenuItem();
        MnG = new javax.swing.JMenuItem();
        MnGC = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        TaEditor.setColumns(20);
        TaEditor.setRows(5);
        jScrollPane1.setViewportView(TaEditor);

        TaVariables.setEditable(false);
        TaVariables.setColumns(20);
        TaVariables.setRows(5);
        jScrollPane2.setViewportView(TaVariables);

        TaConsola.setEditable(false);
        TaConsola.setColumns(20);
        TaConsola.setRows(5);
        jScrollPane3.setViewportView(TaConsola);

        Mngc.setText("Archivo");

        MnCargar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.META_MASK));
        MnCargar.setText("Cargar");
        MnCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnCargarActionPerformed(evt);
            }
        });
        Mngc.add(MnCargar);

        MnG.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.META_MASK));
        MnG.setText("Guardar");
        MnG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnGActionPerformed(evt);
            }
        });
        Mngc.add(MnG);

        MnGC.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.META_MASK));
        MnGC.setText("Guardar como...");
        MnGC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnGCActionPerformed(evt);
            }
        });
        Mngc.add(MnGC);

        MBR.add(Mngc);

        setJMenuBar(MBR);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
 * Cargar archivo:
 *éste método es para el submenu de cargar, abre un aexplorador de archivos
 * para que el usuario pueda eñejir el archivo con extención txt que tiene
 * el código.
 */
    private void MnCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnCargarActionPerformed
        JFileChooser select = new JFileChooser();
        select.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        FileFilter filter = new FileNameExtensionFilter("TXT File","txt");
        select.setFileFilter(filter);
        int resultado = select.showOpenDialog(this);
        if(resultado==0){
            GlobalesInterfaz.ruta=select.getSelectedFile().toString();
            gLOBALES.archDep=GlobalesInterfaz.ruta.substring(0,GlobalesInterfaz.ruta.length()-4)+".cbh";
            //System.out.println(gLOBALES.archDep);
            //System.out.println(GlobalesInterfaz.ruta);
            File archivo = select.getSelectedFile();
            try {
               FileReader fileR = new FileReader(archivo);
               String line = "";
               TaEditor.setText("");
                BufferedReader br = new BufferedReader(fileR);
                //System.out.println(archivo);
            while((line=br.readLine())!=null){
                TaEditor.append(line+"\n");
            }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_MnCargarActionPerformed
    /**
     *Menú guardar
     * Éste metodo guarda el archivo editado en el programa
     * con extencion .txt.
     */
    private void MnGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnGActionPerformed
        String texto = TaEditor.getText();
        if(GlobalesInterfaz.ruta==""){
            JFileChooser select = new JFileChooser();
            FileFilter filter = new FileNameExtensionFilter("TXT File","txt");
            select.setFileFilter(filter);
            int resultado = select.showSaveDialog(null);
            if(resultado==0){
                GlobalesInterfaz.ruta=select.getSelectedFile()+".txt";
                //System.out.println(GlobalesInterfaz.ruta);
                File archivo = new File(GlobalesInterfaz.ruta);
                //System.out.println(archivo);
                try {
                   FileWriter fileR = new FileWriter(archivo);
                   fileR.write(texto);
                   fileR.close();
                    
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else{
            File archivo = new File(GlobalesInterfaz.ruta);
                //System.out.println(archivo);
                try {
                   FileWriter fileR = new FileWriter(archivo);
                   fileR.write(texto);
                   fileR.close();
                    
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
    }//GEN-LAST:event_MnGActionPerformed
    /**
     *Éste método permite al usuario seleccionar la ruta en donde
     * desea guardar el documento editado con extencion .txt.
     */
    private void MnGCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnGCActionPerformed
            String texto = TaEditor.getText();
            JFileChooser select = new JFileChooser();
            FileFilter filter = new FileNameExtensionFilter("TXT File","txt");
            select.setFileFilter(filter);
            int resultado = select.showSaveDialog(null);
            if(resultado==0){
                GlobalesInterfaz.ruta=select.getSelectedFile()+".txt";
                //System.out.println(GlobalesInterfaz.ruta);
                File archivo = new File(GlobalesInterfaz.ruta);
                //System.out.println(archivo);
                try {
                   FileWriter fileR = new FileWriter(archivo);
                   fileR.write(texto);
                   fileR.close();
                    
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
    }//GEN-LAST:event_MnGCActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        TaVariables.setEnabled(false);
        
    }//GEN-LAST:event_formWindowOpened

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        JButton btn = new JButton();
        btn.setBounds(75, 0, 100, 20);
        btn.setText("Depurar");
        btn.setVisible(true);
        btn.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                  Depurador d = new Depurador();
                  d.depurar();
                }
        });
        MBR.add(btn);
        JButton btn2 = new JButton();
        btn2.setBounds(180, 0, 100, 20);
        btn2.setText("Ejecutar");
        btn2.setVisible(true);
        btn2.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                  AnalisisLex lex = new AnalisisLex();
                try {
                    lex.Lexico(TaConsola,TaVariables);
                } catch (IOException ex) {
                    Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
        });
        MBR.add(btn2);
    }//GEN-LAST:event_formWindowActivated
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar MBR;
    private javax.swing.JMenuItem MnCargar;
    private javax.swing.JMenuItem MnG;
    private javax.swing.JMenuItem MnGC;
    private javax.swing.JMenu Mngc;
    private javax.swing.JTextArea TaConsola;
    private javax.swing.JTextArea TaEditor;
    private javax.swing.JTextArea TaVariables;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
